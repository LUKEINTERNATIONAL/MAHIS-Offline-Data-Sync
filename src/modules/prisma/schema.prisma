generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model ConceptName {
  
  id               String @id @default(auto()) @map("_id") @db.ObjectId
  concept_name_id  Int    @unique
  
  

  concept_id       Int
  name             String

  @@map("conceptnames")
}

model ConceptSet {
  
  id             String @id @default(auto()) @map("_id") @db.ObjectId
  concept_set_id Int    @unique
  
  

  concept_set_name String
  member_ids       Json   @default("[]")

  @@map("concept_sets")
}


model Country {
  
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  district_id Int
  
  

  name          String
  region_id     Int
  creator       Int
  date_created  DateTime
  date_retired  DateTime?
  retire_reason String?
  retired       Boolean  @default(false)
  retired_by    Int?

  @@map("countries")
}


model DDE {
  
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  npid      String      @unique
  data      Json        // MongoDB: native JSON
  status    DDEStatus?
  createdAt DateTime    @default(now())
  

  

  @@map("dde")
}

enum DDEStatus {
  pending
  completed
}


model Diagnosis {
  
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  concept_id Int    @unique
  
  

  concept_name_id   Int?
  concept_name_type String?
  creator           Int?
  date_created      DateTime?
  date_voided       DateTime?
  locale            String?
  locale_preferred  Boolean?
  name              String?
  uuid              String?
  void_reason       String?
  voided            Boolean  @default(false)
  voided_by         Int?

  @@map("diagnoses")
}


model Drug {
  
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  drug_id Int    @unique
  
  

  concept_id        Int?
  concept_name_id   Int?
  concept_name_type String?
  creator           Int?
  date_created      DateTime?
  date_voided       DateTime?
  locale            String?
  locale_preferred  Boolean?
  name              String?
  uuid              String?
  void_reason       String?
  voided            Boolean  @default(false)
  voided_by         Int?

  @@map("drugs")
}


model Facility {
  
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  facility_id  Int    @unique
  
  

  code            String  @unique
  name            String
  display_name    String?
  district        String
  status          String
  type            String
  coordinates     Json    @default("[]")
  has_coordinates Boolean @default(false)
  created_at      DateTime
  updated_at      DateTime

  @@map("facilities")
}


model Patient {
  
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  data      Json   // MongoDB native JSON
  
  

  message   String
  timestamp Int?
  patientID String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("patients")
}


model Program {
  
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  program_id Int    @unique
  
  

  concept_id   Int
  name         String
  description  String?
  creator      Int?
  changed_by   Int?
  date_created DateTime?
  date_changed DateTime?
  retired      Boolean @default(false)
  uuid         String  @unique

  @@map("programs")
}


model Relationship {
  
  id                   String @id @default(auto()) @map("_id") @db.ObjectId
  relationship_type_id Int    @unique
  
  

  a_is_to_b     String
  b_is_to_a     String
  description   String?
  preferred     Boolean  @default(false)
  weight        Int?
  creator       Int
  date_created  DateTime
  date_retired  DateTime?
  retired       Boolean  @default(false)
  retire_reason String?
  retired_by    Int?
  uuid          String   @unique

  @@map("relationships")
}


model ServerPatientCount {
  
  id                   String @id @default(auto()) @map("_id") @db.ObjectId
  server_patient_count Int
  
  

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("server_patient_counts")
}


model Specimen {
  
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  concept_id Int    @unique
  
  

  name String?

  @@map("specimens")
}


model Stage {
  
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  stage_id Int    @unique
  data     Json   // MongoDB native JSON
  
  

  @@map("stages")
}


model Stock {
  
  id                  String @id @default(auto()) @map("_id") @db.ObjectId
  pharmacy_batch_id   Int    @unique
  
  

  barcode               String?
  batch_number          String?
  drug_id               Int
  drug_legacy_name      String?
  drug_name             String?
  product_code          String?
  manufacture           String?
  dosage_form           String?
  unit_doses            Int?
  pack_size             Int?
  expiry_date           String?
  delivery_date         String?
  delivered_quantity    Int     @default(0)
  dispensed_quantity    Int     @default(0)
  doses_wasted          Int     @default(0)
  current_quantity      Int     @default(0)
  total_count           Int?
  creator               Int
  changed_by            Int?
  date_created          DateTime
  date_changed          DateTime?
  latest_date_changed   DateTime?
  voided                Boolean  @default(false)
  void_reason           String?
  date_voided           DateTime?
  voided_by             Int?

  @@map("stocks")
}


model TestResultIndicator {
  
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  concept_id Int    @unique
  
  

  test_type_id Int
  name         String?

  @@map("test_result_indicators")
}


model TestType {
  
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  concept_id Int    @unique
  
  

  concept_set    Int?
  concept_set_id Int?
  name           String

  @@map("test_types")
}


model TraditionalAuthority {
  
  id                        String @id @default(auto()) @map("_id") @db.ObjectId
  traditional_authority_id  Int    @unique
  
  

  name          String
  district_id   Int
  creator       Int
  date_created  DateTime
  date_retired  DateTime?
  retire_reason String?
  retired       Boolean  @default(false)
  retired_by    Int?

  @@map("traditional_authorities")
}


model User {
  
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  user_id    Int    @unique
  
  

  locationId String

  @@map("users")
}


model Village {
  
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  village_id Int    @unique
  
  

  name                     String
  traditional_authority_id Int
  date_created             DateTime

  @@map("villages")
}


model Visit {
  
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  visit_id Int    @unique
  data     Json   // MongoDB native JSON
  
  

  @@map("visits")
}


model Ward {
  
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  location_id Int    @unique
  
  

  uuid              String?
  address1          String   @default("")
  address2          String   @default("")
  city_village      String   @default("")
  country           String   @default("")
  county_district   Int?
  creator           Int
  date_created      DateTime
  date_retired      DateTime?
  description       String   @default("")
  district          String   @default("")
  latitude          String   @default("")
  location_type_id  Int?
  longitude         String   @default("")
  name              String
  neighborhood_cell Int?
  parent_location   Int?
  postal_code       String   @default("")
  region            Int?
  retire_reason     String?
  retired           Boolean  @default(false)
  retired_by        Int?
  state_province    String   @default("")
  subregion         Int?
  township_division Int?

  @@map("wards")
}